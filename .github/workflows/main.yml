name: Run Analysis and Send Results

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 6 * * 1-5'  # Run at 6 AM UTC Monday through Friday

jobs:
  analyze-and-email:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v5
      
      - name: Run analysis script
        run: uv run src/python/analysis.py
        id: run-analysis
      
      - name: Find output CSV file
        id: find-csv
        run: |
          CSV_FILE=$(find . -name "*.csv" -type f -newermt "$(date -d '1 minute ago' '+%Y-%m-%d %H:%M:%S')" | head -n 1)
          if [ -z "$CSV_FILE" ]; then
            echo "No recent CSV file found"
            exit 1
          fi
          echo "csv_file=$CSV_FILE" >> $GITHUB_OUTPUT
          echo "Found CSV file: $CSV_FILE"
      
      - name: Display CSV content in tabular format
        id: display-csv
        run: |
          echo "::group::Analysis Results"
          echo "Content of file: ${{ steps.find-csv.outputs.csv_file }}"
          echo ""
          # Check if column-based tools are installed
          if command -v column &> /dev/null; then
            # Use column for nice formatting if available
            cat "${{ steps.find-csv.outputs.csv_file }}" | column -t -s, | head -n 50
          else
            # Fallback to simple output
            head -n 50 "${{ steps.find-csv.outputs.csv_file }}"
          fi
          echo ""
          echo "::endgroup::"
          
      - name: Convert CSV to Markdown Table
        id: csv-to-md
        run: |
          echo "::group::Converting CSV to Markdown"
          # Read CSV header to create markdown table header
          HEADER=$(head -n 1 "${{ steps.find-csv.outputs.csv_file }}")
          
          # Create markdown table content
          echo "Creating markdown table from CSV data"
          MARKDOWN_TABLE="## Analysis Results - $(date +"%Y-%m-%d")\n\n"
          
          # Convert header to markdown table format
          MARKDOWN_TABLE+="| $(echo $HEADER | sed 's/,/ | /g') |\n"
          MARKDOWN_TABLE+="| $(echo $HEADER | sed 's/[^,]*/-/g' | sed 's/,/ | /g') |\n"
          
          # Add data rows (limited to 50 rows for readability)
          tail -n +2 "${{ steps.find-csv.outputs.csv_file }}" | head -n 50 | while read -r line; do
            MARKDOWN_TABLE+="| $(echo $line | sed 's/,/ | /g') |\n"
          done
          
          # Save markdown to a file
          echo -e "$MARKDOWN_TABLE" > analysis_results.md
          echo "::endgroup::"
      
      - name: Create GitHub Discussion
        uses: peter-evans/create-or-update-discussion@v3
        with:
          token: ${{ github.token }}  # Use the default token provided by GitHub Actions
          repository: ${{ github.repository }}
          category-id: "show-and-tell" # This is the ID for "Show and Tell" category
          title: "Options Analysis Results - $(date +"%Y-%m-%d %H:%M")"
          body-file: analysis_results.md

      # - name: Send email with CSV attachment
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: smtp.gmail.com
      #     server_port: 465
      #     secure: true
      #     username: ${{ secrets.EMAIL_USERNAME }}
      #     password: ${{ secrets.EMAIL_PASSWORD }}
      #     subject: Options Analysis Results - ${{ github.repository }}
      #     body: |
      #       Please find attached the latest options analysis results.
      #       
      #       This email was automatically generated by GitHub Actions.
      #     to: ${{ secrets.email1 }},${{ secrets.email2 }}
      #     from: GitHub Actions
      #     attachments: ${{ steps.find-csv.outputs.csv_file }}

